{
  "name": "key_val_store_api",
  "version": "1.0.0",
  "private": false,
  "scripts": {
    "start": "set DEBUG=key_val_store_api:app* && node ./bin/www",
    "test": "mocha --timeout 10000"
  },
  "author": "Kavil Hakani",
  "license": "MIT",
  "dependencies": {
    "aws-serverless-express": "^3.3.5",
    "body-parser": "^1.18.3",
    "config": "^2.0.1",
    "cookie-parser": "~1.3.5",
    "dotenv": "^6.0.0",
    "express": "^4.16.3",
    "forever-monitor": "^1.7.1",
    "mysql": "^2.16.0"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "chai-http": "^4.2.0",
    "expect": "^23.5.0",
    "mocha": "^5.2.0"
  },
  "description": "A mysql based key value store with a HTTP API we can query that from. The API would: 1. Accept a key(string) and value(some json blob/string) {\"key\" : \"value\"} and store them. If an              existing key is sent, the value should be updated 2. Accept a key and return the corresponding latest value 3. When given a key AND a timestamp, return whatever the value of the key at the time was.",
  "main": "app.js",
  "directories": {
    "test": "test"
  }
}
